{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/services/search.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {SearchComponent} from './search/search.component';\n\nconst routes: Routes = [\n  {path: 'search', component: SearchComponent},\n  {path: '', redirectTo: '/search', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'searching-FE';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SearchComponent } from './search/search.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatAutocompleteModule, MatInputModule} from '@angular/material';\nimport {HttpClientModule} from '@angular/common/http';\nimport {SearchService} from './services/search.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    HttpClientModule\n  ],\n  providers: [SearchService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaC9zZWFyY2guY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div style=\\\"text-align:left;\\\">\\r\\n  <h1>\\r\\n    {{ title }}\\r\\n  </h1>\\r\\n\\r\\n  <form>\\r\\n    <mat-form-field class=\\\"container\\\">\\r\\n\\r\\n      <!-- ADD AN INPUT BOX OF TYPE TEXT AND LINK IT TO THE AUTO COMPLETE PANEL. -->\\r\\n      <input type=\\\"text\\\" placeholder=\\\"Tìm kiếm theo địa điểm\\\"\\r\\n             matInput\\r\\n             [formControl]=\\\"searchTerm\\\"\\r\\n             [matAutocomplete]=\\\"auto\\\">\\r\\n\\r\\n      <!-- CREATE AUTO COMPLETE PANEL WITH OPTIONS. -->\\r\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n        <mat-option *ngFor=\\\"let search of searchs\\\" [value]=\\\"search.name\\\">\\r\\n          {{ search.nameFull }}\\r\\n        </mat-option>\\r\\n      </mat-autocomplete>\\r\\n\\r\\n    </mat-form-field>\\r\\n  </form>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SearchService} from '../services/search.service';\nimport {FormControl} from '@angular/forms';\nimport {Search} from '../models/search';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  title = 'Smart search';\n\n  searchTerm: FormControl = new FormControl();\n  searchs: Search[];\n\n  constructor(private searchService: SearchService) { }\n\n  ngOnInit() {\n    this.searchTerm.valueChanges.subscribe(\n      term => {\n        if (term !== '') {\n          this.searchService.fetchData(term).subscribe(\n            res => this.searchs = res\n          );\n        }\n      }\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Search} from '../models/search';\nimport {environment} from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  constructor(private http: HttpClient) { }\n\n  fetchData(keyword: string): Observable<Search[]> {\n    const apiUri = `${environment.apiUri}/search?query=${keyword}`;\n    return this.http.get<Search[]>(apiUri);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUri: 'http://10.4.41.19:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}